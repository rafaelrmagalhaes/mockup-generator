{"version":3,"sources":["marca_dagua.png","camisa_frente.png","camisa_costas.png","preview/index.js","bar/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Preview","props","data","src","id","alt","style","marginTop","topDistance","marginLeft","leftDistance","width","Bar","state","nextProps","nextState","this","onUpdate","e","f","target","files","reader","FileReader","onload","setState","result","readAsDataURL","className","position","index","type","name","onChange","showUploadedImg","htmlFor","min","max","value","Component","App","color","frontData","frontData2","backData","backData2","clientName","html2canvas","document","getElementById","then","canvas","a","createElement","href","toDataURL","download","click","onClick","print","marca_dagua","backgroundColor","backgroundImage","camisa_frente","camisa_costas","placeholder","updateClientName","changeColor","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df029336.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marca_dagua.aa35bae6.png\";","module.exports = __webpack_public_path__ + \"static/media/camisa_frente.527c098b.png\";","module.exports = __webpack_public_path__ + \"static/media/camisa_costas.ad59608e.png\";","import React from 'react';\nimport './style.scss';\n\n// 3px = 1cm\n\nconst Preview = (props) => (\n  props.data && props.data.src && <img \n    id=\"img_preview\" \n    alt=\"Camisa Frente\"\n    src={props.data.src}\n    style={{\n      marginTop: props.data.topDistance * 3,\n      marginLeft: `${props.data.leftDistance}px`,\n      width: props.data.width * 3\n    }}\n  />\n);\n\nexport default Preview;","import React, { Component } from 'react';\n\nexport default class Bar extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      src: null,\n      width: 10,\n      topDistance: 6,\n      leftDistance: 0,\n    }\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    if (nextState !== this.state) {\n      this.props.onUpdate(nextState);\n    }\n  }\n\n  showUploadedImg(e) {\n    const f = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (() => {\n      return (e) => {\n        this.setState({\n          src: e.target.result\n        });\n      };\n    })();\n    \n    reader.readAsDataURL(f);\n  }\n\n  render() {\n    return (\n      <div className={this.props.position}>\n        <p>{this.props.position === 'left' ? 'Frente': 'Costas'}:</p>\n        <fieldset>\n          <legend>Imagem {this.props.index}</legend>\n          {this.state.src && <img className=\"preview_bar\" src={this.state.src} alt=\"Preview\"/>}\n          <input type=\"file\" name=\"file\" onChange={(e) => this.showUploadedImg(e)} />\n          <br /><br />\n          <label htmlFor=\"top\">Distância da gola: <input type=\"range\" id=\"top\" min=\"6\" max=\"60\" value={this.state.topDistance} onChange={e => this.setState({ topDistance: e.target.value })} /></label>\n          <br /><br />\n          <label htmlFor=\"left\">Distância horizontal: <input type=\"range\" id=\"left\" min=\"0\" max=\"250\" value={this.state.leftDistance} onChange={e => this.setState({ leftDistance: e.target.value })} /></label>\n          <br /><br />\n          <label htmlFor=\"top\">Tamanho da imagem: <input type=\"range\" id=\"width\" min=\"10\" max=\"80\" value={this.state.width} onChange={e => this.setState({ width: e.target.value })} /></label>\n        </fieldset>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport \"./App.scss\";\nimport Preview from \"./preview\";\nimport Bar from \"./bar\";\nimport marca_dagua from \"./marca_dagua.png\";\nimport camisa_frente from \"./camisa_frente.png\";\nimport camisa_costas from \"./camisa_costas.png\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      color: \"#fff\",\n      frontData: null,\n      frontData2: null,\n      backData: null,\n      backData2: null,\n      clientName: \"\"\n    };\n  }\n\n  changeColor(e) {\n    this.setState({\n      color: e.target.value\n    });\n  }\n\n  print() {\n    html2canvas(document.getElementById(\"canvas\")).then(canvas => {\n      var a = document.createElement(\"a\");\n      a.href = canvas.toDataURL(\"image/jpeg\");\n      a.download = `mockup_${this.state.clientName}.jpg`;\n      a.click();\n    });\n  }\n\n  updateClientName(e) {\n    this.setState({\n      clientName: e.target.value\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"main\">\n        <a href=\"#\" className=\"print\" onClick={() => this.print()}>\n          Imprimir\n        </a>\n        <div id=\"canvas\">\n          <img\n            src={marca_dagua}\n            className=\"watermark\"\n            alt=\"Estampa Personalizada\"\n          />\n          <div className=\"mockup\" style={{ backgroundColor: this.state.color }}>\n            <div\n              className=\"preview\"\n              style={{ backgroundImage: `url(${camisa_frente})` }}\n            >\n              <Preview data={this.state.frontData} />\n              <Preview data={this.state.frontData2} />\n            </div>\n            <div\n              className=\"preview\"\n              style={{ backgroundImage: `url(${camisa_costas})` }}\n            >\n              <Preview data={this.state.backData} />\n              <Preview data={this.state.backData2} />\n            </div>\n          </div>\n        </div>\n\n        <input\n          type=\"text\"\n          placeholder=\"Nome do Cliente\"\n          className=\"client\"\n          onChange={e => this.updateClientName(e)}\n        />\n\n        <div className=\"color\">\n          <label htmlFor=\"color\">Cor da camisa:</label>\n          <select id=\"color\" onChange={e => this.changeColor(e)}>\n            <option value=\"#fff\">Branca</option>\n            <option value=\"#f00\">Vermelha</option>\n            <option value=\"#00f\">Azul</option>\n            <option value=\"#0f0\">Verde</option>\n            <option value=\"#000\">Preta</option>\n          </select>\n        </div>\n\n        <hr />\n\n        <Bar\n          position=\"left\"\n          index={1}\n          onUpdate={frontData => this.setState({ frontData })}\n        />\n        <Bar\n          position=\"left\"\n          index={2}\n          onUpdate={frontData2 => this.setState({ frontData2 })}\n        />\n        <Bar\n          position=\"right\"\n          index={2}\n          onUpdate={backData2 => this.setState({ backData2 })}\n        />\n        <Bar\n          position=\"right\"\n          index={1}\n          onUpdate={backData => this.setState({ backData })}\n        />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}